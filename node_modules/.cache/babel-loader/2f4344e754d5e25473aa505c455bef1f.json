{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tjbur\\\\Documents\\\\GitHub\\\\Data-rep-Project\\\\src\\\\Componets\\\\changestock.js\";\nimport React from 'react';\nimport axios, { Axios } from 'axios';\nimport { Itemsget } from './Itemsget';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class changestock extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      items: []\n    };\n    this.ReloadData = this.ReloadData.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:4000/api/items').then(response => {\n      this.setState({\n        items: response.data\n      });\n    }).catch(error => {\n      console.log(\"Error in mount \" + error);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"This is the read Component\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Itemsget, {\n        items: this.state.items,\n        ReloadData: this.ReloadData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this) // Runs movies.js that then runs movieitem that for each new movie creates a card and fills in needed info\n    ;\n  }\n\n  ReloadData() {\n    //Reloads data\n    axios.get('http://localhost:4000/api/items') //Pulls from server\n    .then(response => {\n      this.setState({\n        items: response.data\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n}","map":{"version":3,"sources":["C:/Users/tjbur/Documents/GitHub/Data-rep-Project/src/Componets/changestock.js"],"names":["React","axios","Axios","Itemsget","changestock","Component","constructor","state","items","ReloadData","bind","componentDidMount","get","then","response","setState","data","catch","error","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,KAAhB,QAA6B,OAA7B;AACA,SAASC,QAAT,QAAyB,YAAzB;;AACA,OAAO,MAAMC,WAAN,SAA0BJ,KAAK,CAACK,SAAhC,CAA0C;AAC7CC,EAAAA,WAAW,GAAE;AACT;AADS,SAIbC,KAJa,GAIL;AACJC,MAAAA,KAAK,EAAE;AADH,KAJK;AAET,SAAKC,UAAL,GAAgB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAhB;AACH;;AAKDC,EAAAA,iBAAiB,GAAG;AAChBV,IAAAA,KAAK,CAACW,GAAN,CAAU,iCAAV,EACKC,IADL,CAESC,QAAD,IAAc;AACV,WAAKC,QAAL,CAAc;AAAEP,QAAAA,KAAK,EAAEM,QAAQ,CAACE;AAAlB,OAAd;AAEH,KALT,EAMKC,KANL,CAOSC,KAAD,IAAW;AAAEC,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAkBF,KAA9B;AAAsC,KAP3D;AAUH;;AACDG,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA,QAAC,QAAD;AAAU,QAAA,KAAK,EAAE,KAAKd,KAAL,CAAWC,KAA5B;AAAmC,QAAA,UAAU,EAAE,KAAKC;AAApD;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CAMA;AANA;AAQH;;AACDA,EAAAA,UAAU,GAAE;AAAC;AACTR,IAAAA,KAAK,CAACW,GAAN,CAAU,iCAAV,EAA4C;AAA5C,KACCC,IADD,CAEKC,QAAD,IAAc;AACV,WAAKC,QAAL,CAAc;AAAEP,QAAAA,KAAK,EAAEM,QAAQ,CAACE;AAAlB,OAAd;AACH,KAJL,EAKCC,KALD,CAMKC,KAAD,IAAW;AAAEC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAAoB,KANrC;AAQH;;AAxC4C","sourcesContent":["import React from 'react';\r\nimport axios, { Axios } from 'axios'\r\nimport { Itemsget } from './Itemsget';\r\nexport class changestock extends React.Component {\r\n    constructor(){\r\n        super();\r\n        this.ReloadData=this.ReloadData.bind(this);\r\n    }\r\n    state = {\r\n        items: []\r\n\r\n    };\r\n    componentDidMount() {\r\n        axios.get('http://localhost:4000/api/items')\r\n            .then(\r\n                (response) => {\r\n                    this.setState({ items: response.data})\r\n                   \r\n                })\r\n            .catch(\r\n                (error) => { console.log(\"Error in mount \"+error) }\r\n            )\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n            <h1>This is the read Component</h1>\r\n            <Itemsget items={this.state.items} ReloadData={this.ReloadData}></Itemsget>\r\n\r\n        </div>\r\n        // Runs movies.js that then runs movieitem that for each new movie creates a card and fills in needed info\r\n    );\r\n    }\r\n    ReloadData(){//Reloads data\r\n        axios.get('http://localhost:4000/api/items')//Pulls from server\r\n        .then(\r\n            (response) => {\r\n                this.setState({ items: response.data})\r\n            })\r\n        .catch(\r\n            (error) => { console.log(error) }\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}